#include <bits/stdc++.h> 


void ino(BinaryTreeNode<int> *root,vector<int>&ans)

{

    if(root==NULL) return; //lnr

    ino(root->left,ans);

    ans.push_back(root->data);

    ino(root->right,ans);

}

void pre(BinaryTreeNode<int> *root,vector<int>&ans)

{

    if(root==NULL) return; //nlr

    ans.push_back(root->data);

    pre(root->left,ans);

    pre(root->right,ans);

}

void pos(BinaryTreeNode<int> *root,vector<int>&ans)

{

    if(root==NULL) return; //lrn

    pos(root->left,ans);

    pos(root->right,ans);

    ans.push_back(root->data);

}

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){

    vector<vector<int>> ans;

    vector<int>temp;

    ino(root,temp);

    ans.push_back(temp);

    temp.clear();

 

    pre(root,temp);

    ans.push_back(temp);

    temp.clear();

    

    pos(root,temp);

    ans.push_back(temp);

    return ans;

}
